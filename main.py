from aresta import Aresta
from bellman_ford import bellman_ford
from dijkstra import dijkstra
from grafo import Grafo
from vertice import Vertice


a = Vertice("AAA")
b = Vertice("BBB")
c = Vertice("CCC")
d = Vertice("DDD")
e = Vertice("EEE")
f = Vertice("FFF")
g = Vertice("GGG")
h = Vertice("HHH")
i = Vertice("III")
j = Vertice("JJJ")
vertices = [a, b, c, d, e, f, g, h, i, j]
grafo = Grafo(vertices, True)

grafo.adicionar_aresta(Aresta(a, b, 20))
grafo.adicionar_aresta(Aresta(a, c, 20))
grafo.adicionar_aresta(Aresta(a, d, 38))
grafo.adicionar_aresta(Aresta(a, e, 39))
grafo.adicionar_aresta(Aresta(a, f, 46))
grafo.adicionar_aresta(Aresta(b, a, 20))
grafo.adicionar_aresta(Aresta(b, c, 27))
grafo.adicionar_aresta(Aresta(b, d, 44))
grafo.adicionar_aresta(Aresta(c, a, 20))
grafo.adicionar_aresta(Aresta(c, b, 27))
grafo.adicionar_aresta(Aresta(c, d, 45))
grafo.adicionar_aresta(Aresta(c, j, 32))
grafo.adicionar_aresta(Aresta(d, a, 38))
grafo.adicionar_aresta(Aresta(d, b, 44))
grafo.adicionar_aresta(Aresta(d, c, 45))
grafo.adicionar_aresta(Aresta(d, e, 21))
grafo.adicionar_aresta(Aresta(d, f, 20))
grafo.adicionar_aresta(Aresta(d, g, 26))
grafo.adicionar_aresta(Aresta(e, a, 39))
grafo.adicionar_aresta(Aresta(f, a, 46))
grafo.adicionar_aresta(Aresta(f, c, 21))
grafo.adicionar_aresta(Aresta(f, h, 17))
grafo.adicionar_aresta(Aresta(g, d, 20))
grafo.adicionar_aresta(Aresta(g, j, 17))
grafo.adicionar_aresta(Aresta(h, d, 26))
grafo.adicionar_aresta(Aresta(h, i, 36))
grafo.adicionar_aresta(Aresta(i, f, 17))
grafo.adicionar_aresta(Aresta(i, h, 36))
grafo.adicionar_aresta(Aresta(j, c, 32))
grafo.adicionar_aresta(Aresta(j, g, 17))

# a = Vertice("A")
# b = Vertice("B")
# c = Vertice("C")
# d = Vertice("D")
# e = Vertice("E")
# f = Vertice("F")
# vertices = [a, b, c, d, e, f]
# grafo = Grafo(vertices, False)

# grafo.adicionar_aresta(Aresta(a, d, 9))
# grafo.adicionar_aresta(Aresta(a, e, 8))
# grafo.adicionar_aresta(Aresta(a, f, 5))
# grafo.adicionar_aresta(Aresta(b, d, 2))
# grafo.adicionar_aresta(Aresta(b, e, 5))
# grafo.adicionar_aresta(Aresta(b, f, 9))
# grafo.adicionar_aresta(Aresta(c, d, 10))
# grafo.adicionar_aresta(Aresta(c, e, 1))
# grafo.adicionar_aresta(Aresta(c, f, 7))

# s = Vertice("S")
# a = Vertice("A")
# b = Vertice("B")
# c = Vertice("C")
# d = Vertice("D")
# e = Vertice("E")
# vertices = [s, a, b, c, d, e]
# grafo = Grafo(vertices, True)

# grafo.adicionar_aresta(Aresta(s, a, 10))
# grafo.adicionar_aresta(Aresta(s, e, 8))
# grafo.adicionar_aresta(Aresta(a, c, 2))
# grafo.adicionar_aresta(Aresta(b, a, 1))
# grafo.adicionar_aresta(Aresta(c, b, -2))
# grafo.adicionar_aresta(Aresta(d, a, -4))
# grafo.adicionar_aresta(Aresta(d, c, -1))
# grafo.adicionar_aresta(Aresta(e, d, 1))

distancias = bellman_ford(grafo, a)
print("\nResultado:")
print(distancias)
